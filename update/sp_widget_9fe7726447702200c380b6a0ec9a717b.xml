<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function($scope, spUtil, $http) {
  /* widget controller */
  var c = this;
	$scope.orderField = "number";
	
	// this makes the UI watch the data tables and update on changes
  spUtil.recordWatch($scope, "incident", "", function(name, data) {
       spUtil.update($scope);
  });

	$scope.edit = function(instance) {
		$scope.editingRecord = angular.copy(instance);	
	}
	
	$scope.reset = function() {
		$scope.editingRecord = null;	
	}
	
	$scope.save = function() {
		console.log("in save with "+$scope.editingRecord.sys_id);
		$scope.writeIncident($scope.editingRecord.sys_id,
												{'short_description': $scope.editingRecord.short_description});
		$scope.reset();
	}
	
	  //User the Table API to put for a record of sys_id. Whatever JSON is passed
    //in as data, that will be the update
    $scope.writeIncident = function(sys_id, data) {
					console.log("in write with "+sys_id);
					console.log(data);
        $http({
            method: 'PUT',
            url: '/api/now/table/incident/'+ sys_id,
            headers: {'Content-Type' : 'application/json'},
            data : data
        });
    };
	
	  $scope.changeSort = function(field) {
        if ($scope.orderField == field) {
            $scope.orderReverse = !$scope.orderReverse;
        } else {
            $scope.orderField = field;
        }
    }
		
	$scope.getPriorityClass = function(incident) {
        return "Priority" + incident.priority;
    }
}]]></client_script>
        <controller_as>c</controller_as>
        <css>table, th, td {
   border: 1px solid black;
   padding: 5px;
}

button {
     background-color: #4CAF50; /* Green */
    border: 1px;
    color: white;
    padding: 5px 5px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 10px;
       border-radius: 5px;

}

.Priority1 {
    background-color: red
}

.Priority2 {
    background-color: orange
}

.Priority3 {
    background-color: yellow
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>technow28widget</id>
        <internal>false</internal>
        <link/>
        <name>TechNow28Widget</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
	data.incidents = [];
	
	var gr = new GlideRecord('incident');
    gr.addActiveQuery();
    gr.setLimit(10);
    gr.orderByDesc('sys_updated_on');
    gr.query();

    while(gr.next()) {
        var incident = {};
        incident.number = gr.getDisplayValue('number');
        incident.short_description = gr.getDisplayValue('short_description');
        incident.sys_id = gr.getUniqueValue();
        incident.sys_updated_on = gr.getValue('sys_updated_on');
	      incident.priority = gr.getValue('priority');
			
        data.incidents.push(incident);
    }
	
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2016-07-20 19:19:58</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>9fe7726447702200c380b6a0ec9a717b</sys_id>
        <sys_mod_count>43</sys_mod_count>
        <sys_name>TechNow28Widget</sys_name>
        <sys_package display_value="TechNow 28" source="sn_technow_28">98ae92a047702200c380b6a0ec9a7167</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="TechNow 28">98ae92a047702200c380b6a0ec9a7167</sys_scope>
        <sys_update_name>sp_widget_9fe7726447702200c380b6a0ec9a717b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-02-09 18:52:22</sys_updated_on>
        <template><![CDATA[<div>
<!-- your widget template -->
  <pre>Editing = {{editingRecord.sys_id}}</pre>
  <div><label>Search</label><input type="text" ng-model="searchText" />
  </div>
  <table>
    <tr>
  	<th><button ng-click="changeSort('number')" >Number</button></th>
  	<th><button ng-click="changeSort('short_description')" >Short Description</button></th>
  <th><button ng-click="changeSort('sys_updated_on')" >Updated</button></th>
      </tr>
    <tr ng-repeat="incident in data.incidents | orderBy:orderField:orderReverse | filter:searchText ">      
      <td ng-class="getPriorityClass(incident)">{{incident.number}}
      </td>
      <td ng-if="incident.sys_id == editingRecord.sys_id" ><input type="text" ng-model="editingRecord.short_description" />
      </td>
      <td ng-if="incident.sys_id != editingRecord.sys_id" >{{incident.short_description}}
      </td>
      <td>{{incident.sys_updated_on}}
      </td>
      <td ng-if="incident.sys_id != editingRecord.sys_id" ><button ng-click="edit(incident)">Edit</button>
      </td>
      <td ng-if="incident.sys_id == editingRecord.sys_id">
        <button ng-click="save()">Save</button>
        <button ng-click="reset()">Reset</button>
      </td>
      
    </tr>
  </table>
</div>]]></template>
    </sp_widget>
</record_update>
